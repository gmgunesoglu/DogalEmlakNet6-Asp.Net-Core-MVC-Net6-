// <auto-generated />
using System;
using DogalEmlak.Web.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DogalEmlak.Web.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230430135435_migration1")]
    partial class migration1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DogalEmlak.Web.Entities.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateOfAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfRenewal")
                        .HasColumnType("datetime2");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Rooms")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("SizeOfGross")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("SizeOfNet")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("TypeOfProperty")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TypeOfUsage")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("DogalEmlak.Web.Entities.PropertyImage", b =>
                {
                    b.Property<Guid>("PropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("PropertyId", "FileName");

                    b.ToTable("PropertyImages");
                });

            modelBuilder.Entity("DogalEmlak.Web.Entities.Role", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Authority")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId", "Authority");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("ce53da7d-9219-4419-81cc-a741ed6c2627"),
                            Authority = "Admin"
                        },
                        new
                        {
                            UserId = new Guid("ce53da7d-9219-4419-81cc-a741ed6c2627"),
                            Authority = "Manager"
                        },
                        new
                        {
                            UserId = new Guid("ce53da7d-9219-4419-81cc-a741ed6c2627"),
                            Authority = "Staff"
                        },
                        new
                        {
                            UserId = new Guid("33828faa-f88f-4149-88b7-f2213fece6b3"),
                            Authority = "Staff"
                        });
                });

            modelBuilder.Entity("DogalEmlak.Web.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce53da7d-9219-4419-81cc-a741ed6c2627"),
                            DateOfAdded = new DateTime(2023, 4, 30, 16, 54, 35, 38, DateTimeKind.Local).AddTicks(2784),
                            FirstName = "Gökhan",
                            LastName = "Güneşoğlu",
                            Locked = false,
                            Password = "FA22FB87B07AE7407F5CEDA208A47996",
                            UserName = "gokhan123"
                        },
                        new
                        {
                            Id = new Guid("33828faa-f88f-4149-88b7-f2213fece6b3"),
                            DateOfAdded = new DateTime(2023, 4, 30, 16, 54, 35, 38, DateTimeKind.Local).AddTicks(2925),
                            FirstName = "Serkan",
                            LastName = "Güneşoğlu",
                            Locked = false,
                            Password = "FA22FB87B07AE7407F5CEDA208A47996",
                            UserName = "serkan123"
                        });
                });

            modelBuilder.Entity("DogalEmlak.Web.Entities.PropertyImage", b =>
                {
                    b.HasOne("DogalEmlak.Web.Entities.Property", null)
                        .WithMany("PropertyImages")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DogalEmlak.Web.Entities.Role", b =>
                {
                    b.HasOne("DogalEmlak.Web.Entities.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DogalEmlak.Web.Entities.Property", b =>
                {
                    b.Navigation("PropertyImages");
                });

            modelBuilder.Entity("DogalEmlak.Web.Entities.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
